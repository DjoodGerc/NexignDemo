services:
  app:
    image: docker.io/library/demo:0.0.1-SNAPSHOT
    build: .
    ports:
      - "8080:8080"
    environment:
      DB_ADDR_ALIAS: "postgres"
      DB_PORT: "5432"
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/nexignTestCase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 2709
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_LIQUIBASE_CHANGELOG: classpath:db/changelog/db.changelog-master.yaml
    depends_on:
      - db
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181


  db:

    image: postgres:17.2
    restart: "no"
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2709
      POSTGRES_DB: nexignTestCase
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5


  kafka:
    container_name: kafka

    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1







volumes:
  kafka_data:
  postgres_data:
  zookeeper_data:
